model{ 
# This is an adaptation from the 'island model' for SA with ST data.
for(i in 1:ns){    # ns = number of source populations

####################
# ST frequencies (qST):
# The sample frequencies are pre-calculated in R, and represent
# such collection of isolates that were found in one or more of the 
# source populations (excluding those that were only in humans).

# Here qST fixed to mean frequencies, based on sample & "Dir(1/n)"-prior: 
for(j in 1:nST){  qST[i,j] <- (sourcesST[i,j]+1/nST) / (sum(sourcesST[i,])+1)   }

####################
# Next: models for "migration" and "novel" types per source population.
# Interprete observed (common) STs in source population i (1:ns) as a result of migration,
# so that the probability of ST type j is the product of migration probability from
# population s to population i,  khi[i,s] and the ST frequency qST[s,j],  
# summed over sources s. 
# Hence: Multinomial model for the counts in source i for types common with other sources.  
# N[i,j] = number of isolates in  the sample from source population i, (locus j), such that
# these ST types are found at least in some other sources.  
# "Mutation" probability for "novel" types is source specific

N[i] <-  sum(migrateST[i,]) 
migrateST[i,1:nST] ~ dmulti(etaST[i,1:nST],N[i]) 
# khi is immigration probability to source i from other sources
for(j in 1:nST){etaST[i,j] <- inprod(qST[1:ns,j],khi[i,1:ns])    
                           etaST.cut[i,j] <- cut(etaST[i,j])  }
# model for "novel" types in the sample: 
NSTnovel[i] ~ dbin(pmuta[i],NST[i])  
# NSTnovel[i] = number of ST types in source i, that were not 
# in the samples of other sources.  
# NST[i] = number of isolates in source i.
# Fixed mean frequencies of the "novel" types in a source (based on data & "Dir(1/n)"-prior):
for(j in 1:nST){ iotaST[i,j] <- (sourcesSTnovel[i,j]+1/nST)/(sum(sourcesSTnovel[i,]) +1)  } 

}  # i.   End of "training data model". (Data from source populations only)
# these data provide estimates for "migration" probabilities khi 
# and "mutation" probabilities pmuta only.
# So: the multinomial probabilities of the observable types in a source are a function 
# of the parameters khi & pmuta AND the fixed frequencies qST.

#################
# number of human ST counts that are common with at least some sources:
MST <- sum(humansST[])  

# all Human ST types modeled as possible types resulting either 
# from migration or mutation:
humansST[1:nST] ~ dmulti(thetaST[1:nST],MST)

for(j in 1:nST){
 thetaST[j] <- (inprod(migmutaST[1:ns,j],phi[1:ns]))   
 for(i in 1:ns){migmutaST[i,j] <- etaST.cut[i,j]*(1-pmuta.cut[i])+pmuta.cut[i]*iotaST[i,j]  
}}

##########################

# Count of human types that were not found in any of the sources:
# Binomial distribution; Nhumans=all human isolates.
NSTHo ~  dbin(pother,Nhumans)

################
# Prior for source probabilities:
for(i in 1:ns){ phi[i] <- g0[i]/sum(g0[]) 
 g0[i] ~ dgamma(beta[i],1)  # set beta[i] = 1 for Dir(1,1,1,....) prior
}  
# Prior for mutation probabilities:
for(i in 1:ns){ pmuta[i] ~ dbeta(1,1); pmuta.cut[i] <- cut(pmuta[i])  }
# Prior for migration probabilities:
for(i in 1:ns){ 
for(k in 1:ns){ khi[i,k] <- h0[i,k]/sum(h0[i,1:ns]) 
     h0[i,k] ~ dgamma(alpha[i,k],1)  # set alpha for Dir-prior parameters.
     }  }
# Prior for probability of other unknown sources:
pother ~ dbeta(1,1)
} # End of model
